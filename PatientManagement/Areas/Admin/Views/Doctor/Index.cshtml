@using BELibrary.Entity
@using BELibrary.Utils
@model List<Doctor>
@{
    ViewBag.Title = ViewBag.Feature + " " + ViewBag.Element;
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@section CSS{
    <!--DataTables [ OPTIONAL ]-->
    <link href="/Areas/Admin/Content/plugins/datatables/media/css/dataTables.bootstrap.css" rel="stylesheet">
    <link href="/Areas/Admin/Content/plugins/datatables/extensions/Responsive/css/responsive.dataTables.min.css" rel="stylesheet">
    <style>
        .select2-container {
            z-index: 99999;
            width: 100% !important;
        }
    </style>
}
<!--List-->
<div class="panel">
    <div class="panel-body">

        <div class="pad-btm form-inline">
            <div class="row">
                <div class="col-sm-6 table-toolbar-left">
                    <button data-toggle="modal" onclick="openModal(false)" class="btn btn-success"><i class="demo-pli-add"></i> Thêm</button>
                </div>
                <div class="col-sm-6 table-toolbar-right">
                    <div class="form-group">
                        <input id="demo-input-search2" type="text" placeholder="Tìm kiếm" class="form-control" autocomplete="off">
                    </div>
                </div>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-striped" id="tblData">
                <thead>
                    <tr>
                        <th class="text-center">STT</th>
                        <th class="text-center">Tên </th>
                        <th class="text-center">Email </th>
                        <th class="text-center">Khoa </th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Select((value, index) => new { index = (index + 1), value }))
                    {
                        <tr id="row_@item.value.Id">
                            <td class="text-center"><a class="btn-link" href="#">@item.index</a></td>
                            <td class="text-center">@item.value.Name</td>
                            <td class="text-center">@item.value.Email</td>
                            <td class="text-center">@item.value.Faculty.Name</td>
                            <td class="text-center">
                                <button class="btn btn-info btn-icon" onclick="openModal(true,'@item.value.Id')"><i class="demo-psi-pen-5 icon-lg"></i></button>
                                <button class="btn btn-danger btn-icon" onclick="deleteElement('@item.value.Id','@item.value.Name')"><i class="demo-psi-recycling icon-lg"></i></button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<!--Create-->
<div class="modal fade" id="data-modal" role="dialog" tabindex="-1" aria-labelledby="create" aria-hidden="true">
    <div class="modal-dialog" style="padding: 5% 0;">
        <div class="modal-content">
            <form id="modal-form" class="form-horizontal" method="post">
                <input type="hidden" name="Id" />
                <input type="hidden" name="isEdit" />
                <!--Modal header-->
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><i class="pci-cross pci-circle"></i></button>
                    <h4 class="modal-title">@ViewBag.Element</h4>
                </div>

                <!--Modal body-->
                <div class="modal-body">
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Tên</label>
                        <div class="col-lg-7">
                            <input type="text" class="form-control" name="Name" placeholder="" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Email</label>
                        <div class="col-lg-7">
                            <input type="text" class="form-control" name="Email" placeholder="" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Sđt</label>
                        <div class="col-lg-7">
                            <input type="text" class="form-control" name="Phone" placeholder="" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Địa chỉ</label>
                        <div class="col-lg-7">
                            <input type="text" class="form-control" name="Address" placeholder="" required>
                        </div>
                    </div>
                    <div class="form-group edit-modal">
                        <label class="col-lg-3 control-label " for="demo-hor-inputpass">Giới tính </label>
                        <div class="col-lg-7">
                            <input class="toggle-switch" id="demo-allow-comments" name="Gender" type="checkbox">
                            <label for="demo-allow-comments"></label>
                            <span style="padding: 1px 0 0 10px" id="status"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Khoa</label>
                        <div class="col-lg-7 input-group mar-btm">
                            @Html.DropDownList("FacultyId", (SelectList)ViewBag.Faculties,
                                new { @class = "form-control", @required = "required" })
                        </div>
                    </div>
                </div>
                <!--Modal footer-->
                <div class="modal-footer">
                    <button data-dismiss="modal" class="btn btn-default" type="button">Đóng</button>
                    <button class="btn btn-success" type="submit">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!--Script-->
@section Scripts {
    <!--DataTables [ OPTIONAL ]-->
    <script src="/Areas/Admin/Content/plugins/datatables/media/js/jquery.dataTables.js"></script>
    <script src="/Areas/Admin/Content/plugins/datatables/media/js/dataTables.bootstrap.js"></script>
    <script src="/Areas/Admin/Content/plugins/datatables/extensions/Responsive/js/dataTables.responsive.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#tblData').dataTable({
                "language": {
                    "paginate": {
                        "previous": '<i class="demo-psi-arrow-left"></i>',
                        "next": '<i class="demo-psi-arrow-right"></i>'
                    }
                }
            });
            const isChecked = $("#demo-allow-comments").is(":checked");
            if (isChecked) {
                $("#status").text("Nam");
            } else {
                $("#status").text("Nữ");
            }

            //
            $("#FacultyId").select2();
        });
        $("#demo-allow-comments").change(function () {
            const isChecked = $("#demo-allow-comments").is(":checked");
            if (isChecked) {
                $("#status").text("Nam");
            } else {
                $("#status").text("Nữ");
            }
        });
        $("#Image").change(function () {
            const imgSrc = $("input[name=Image]").val();
            console.log(imgSrc);
            if (imgSrc !== "") {
                $("#Img").attr("src", imgSrc);
            }
        });
        function chooseImg() {
            const finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                $("#Img").attr("src", fileUrl);
                $("input[name=Image]").val(fileUrl);
            }
            finder.popup();
        }

        const baseUrl = "/admin/doctor";
        // Valid
        const fields = {
            Name: {
                container: 'tooltip',
                validators: {
                    notEmpty: {
                        message: 'Tên không được để trống!'
                    }
                }
            }
        }

        validator.valid('modal-form',
            fields,
            (e) => {
                e.preventDefault();

                var formData = new FormData(document.getElementById('modal-form'));
                console.log(formData);
                const isChecked = $("#demo-allow-comments").is(":checked");
                formData.set("Gender", isChecked);
                ajax.createOrUpdate(`${baseUrl}/CreateOrEdit`,
                    formData,
                    (response) => {
                        if (response.status) {
                            notify.push(response.mess, notify.EType.SUCCESS);
                            notify.loading();
                            $('#data-modal').modal('hide');
                            setTimeout(function () {
                                window.location.href = window.location.pathname;
                            }, 3000);

                        } else {
                            notify.push(response.mess, notify.EType.DANGER);
                            $(':input[type="submit"]').prop("disabled", false);
                        }
                    },
                    (jqXhr, textStatus) => {
                        const mess = `Request failed: ${textStatus}`;
                        notify.push(mess, notify.EType.DANGER);
                        $(':input[type="submit"]').prop("disabled", false);
                    }
                );
            });

        //Edit
        function openModal(isEdit, id) {
            $('#modal-form')[0].reset();
            $("#Img").attr("src", "");
            if (!isEdit) {
                $('#modal-form input[name="isEdit"]').val(false);
                $('#data-modal').modal('show');
                return;
            }

            ajax.get(`${baseUrl}/GetJson`,
                { id: id },
                (response) => {
                    if (response.status) {
                        const obj = response.data;
                        $('#modal-form input[name="Name"]').val(obj.Name);
                        $('#modal-form input[name="Phone"]').val(obj.Phone);
                        $('#modal-form input[name="Email"]').val(obj.Email);
                        $('#modal-form input[name="Address"]').val(obj.Address);

                        $("#FacultyId").val(obj.FacultyId);
                        $('#FacultyId').select2().trigger('change');

                        $('#modal-form input[name="Gender"]').prop('checked', obj.Gender);

                        $('#modal-form input[name="Id"]').val(obj.Id);
                        $('#modal-form input[name="isEdit"]').val(true);
                        $('#data-modal').modal('show');
                    } else {
                        notify.push(response.mess, notify.EType.DANGER);
                    }
                },
                (jqXhr, textStatus) => {
                    const mess = `Request failed: ${textStatus}`;
                    notify.push(mess, notify.EType.DANGER);

                }
            );
        }

        //Del
        function deleteElement(_id, name) {
            var mess = `Xác nhận <b>xóa</b> bản ghi <b>${name}</b>`;
            bootbox.confirm(mess,
                function (result) {
                    if (result) {
                        ajax.del(`${baseUrl}/del`,
                            { id: _id },
                            (response) => {
                                if (response.status) {
                                    notify.push(response.mess, notify.EType.SUCCESS);
                                    $(`#row_${_id}`).remove();
                                } else {
                                    notify.push(mess, notify.EType.DANGER);
                                }
                            },
                            (jqXhr, textStatus) => {
                                const mess = `Request failed: ${textStatus}`;
                                notify.push(mess, notify.EType.DANGER);

                            }
                        );
                    }
                });
        }
    </script>
}